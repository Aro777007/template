#include <iostream>
#include <string>
using namespace std;

template <typename t>
class arrayy
{  
    t* arr = nullptr;
    int size = 0;

public:
    arrayy(int size)
    {
        this->size = size;
        arr = new int[size];
    }

    arrayy(const arrayy& obj)
    {
        this->size = obj.size;
        arr = new t[size];
    }

    t& operator =(const arrayy& obj)
    {
        if (this != &obj)
        {
            this->size = obj.size;
            arr = new t[size];
        }
        return*this;
    }

    void get_element()
    {
        for (t i = 0; i < size; ++i)
        {
            arr[i] = 1;
        }

        for (t i = 0; i < size; ++i)
        {
            cout << arr[i];
        }

    }

    ~arrayy()
    {
        delete[] arr;
    }
};

int main()
{

    int size;
    cin >> size;
    arrayy<int> a(size);
    arrayy<int> obj1 = a;
    a.get_element();

    return 0;
}
